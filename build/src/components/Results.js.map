{"version":3,"sources":["../../../server/src/components/Results.js"],"names":["Results","saveArticle","article","console","log","postArticle","props","savefunc","_id","results","map","item","web_url","headline","main","pub_date"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;IAEMA,O;;;;;;;;;;;;;;wLAuCJC,W,GAAc,UAACC,OAAD,EAAW;AACvBC,cAAQC,GAAR,CAAYF,OAAZ;AACA,wBAAQG,WAAR,CAAoBH,OAApB;AACA;AACA,YAAKI,KAAL,CAAWC,QAAX,CAAoBL,QAAQM,GAA5B;AACD,K;;;AA1CD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;6BAQS;AAAA;;AACP,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEA;AAAA;AAAA,YAAI,WAAU,YAAd;AACG,eAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAAnB,CAAuB;AAAA,mBACtB;AAAA;AAAA,gBAAI,KAAKC,KAAKH,GAAd,EAAmB,WAAU,iBAA7B;AACGG,mBAAKC,OADR;AAEE,uDAFF;AAGGD,mBAAKE,QAAL,CAAcC,IAHjB;AAIE;AAAA;AAAA;AACE,6BAAU,iBADZ;AAEE,wBAAK,QAFP;AAGE,2BAAS,mBAAM;AAAC,2BAAKb,WAAL,CAAiBU,IAAjB;AAAuB;AAHzC;AAAA;AAAA,eAJF;AAWE,uDAXF;AAYGA,mBAAKI;AAZR,aADsB;AAAA,WAAvB;AADH;AAFA,OADF;AAuBD;;;;;;kBAKYf,O","file":"Results.js","sourcesContent":["import React, {Component} from 'react';\n\nimport helpers from '../utils/helpers';\n\nclass Results extends Component {\n\n  // state = {\n  //   results: [],\n  //   searchTerm: {},\n  //   article: {}\n  // };\n\n  // componentDidUpdate() {\n  //   helpers.postArticle(this.state.article)\n  //     .then(() => {\n  //     console.log(\"posted to mongo\");\n  //   })\n  // }\n\n  // Whenever the button is clicked we'll use setState to add to the clickCounter\n  // Note the syntax for setting the state\n\n  // If the component changes (i.e. if a search is entered)...\n  // componentDidMount() {\n  //   //if (prevState.searchTerm !== this.state.searchTerm) {\n  //     console.log('Updated');\n  //     console.log(this.props.searchTerm);\n  //\n  //     //var {topic, startYear, endYear} = this.props.searchTerm;\n  //\n  //\n  //     // Run query for the article\n  //     helpers.runQuery(this.props.searchTerm).then((data) => {\n  //       if (data !== this.state.results) {\n  //         this.setState({results: data});\n  //         console.log('Articles');\n  //         console.log(this.state.results);\n  //       }\n  //     })\n  //   //}\n  // }\n\n  // save articles\n  saveArticle = (article)=>{\n    console.log(article);\n    helpers.postArticle(article);\n    // Set the parent to have the search term\n    this.props.savefunc(article._id);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>Search Results</h2>\n      <ul className=\"list-group\">\n        {this.props.results.map(item => (\n          <li key={item._id} className=\"list-group-item\">\n            {item.web_url}\n            <hr/>\n            {item.headline.main}\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => {this.saveArticle(item)}}\n            >\n              Save\n            </button>\n            <hr/>\n            {item.pub_date}\n          </li>\n        ))}\n      </ul>\n      </div>\n    );\n  };\n\n}\n\n\nexport default Results;"]}